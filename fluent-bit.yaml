apiVersion: v1
kind: ServiceAccount
metadata:
  name: oci-la-fluentd-serviceaccount
  namespace: fluent-bit
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: oci-la-fluentd-logs-clusterrole
  namespace: fluent-bit
rules:
- apiGroups:
  - ""
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  - batch
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: oci-la-fluentd-logs-clusterrolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: oci-la-fluentd-logs-clusterrole
subjects:
- kind: ServiceAccount
  name: oci-la-fluentd-serviceaccount
  namespace: fluent-bit
---
apiVersion: v1
data:
  fluent.conf: |
    @include kubernetes.conf

    # Filter to add kubernetes metadata
    <filter oci.**>
      @type kubernetes_metadata
      @id filter_kube_metadata
      kubernetes_url "#{ENV['FLUENT_FILTER_KUBERNETES_URL'] || 'https://' + ENV.fetch('KUBERNETES_SERVICE_HOST') + ':' + ENV.fetch('KUBERNETES_SERVICE_PORT') + '/api'}"
      verify_ssl "#{ENV['KUBERNETES_VERIFY_SSL'] || true}"
      ca_file "#{ENV['KUBERNETES_CA_FILE']}"
      skip_labels "#{ENV['FLUENT_KUBERNETES_METADATA_SKIP_LABELS'] || 'false'}"
      skip_container_metadata "#{ENV['FLUENT_KUBERNETES_METADATA_SKIP_CONTAINER_METADATA'] || 'false'}"
      skip_master_url "#{ENV['FLUENT_KUBERNETES_METADATA_SKIP_MASTER_URL'] || 'false'}"
      skip_namespace_metadata "#{ENV['FLUENT_KUBERNETES_METADATA_SKIP_NAMESPACE_METADATA'] || 'false'}"
      watch "#{ENV['FLUENT_KUBERNETES_WATCH'] || 'true'}"
      de_dot false
      annotation_match [ ".*" ]
    </filter>

    # Match block to ensure all the logs including concat plugin timeout logs will have same label
    <match oci.**>
      @type relabel
      @label @NORMAL
    </match>

    # Match block to set info required for oci-logging-analytics fluentd outplugin
    <label @NORMAL>
      <match oci.**>
          @type oci-logging-analytics
          enable_ruby               true
          namespace                 "#{ENV['FLUENT_OCI_NAMESPACE']}"
          config_file_location      "#{ENV['FLUENT_OCI_CONFIG_LOCATION'] || ''}"
          profile_name              "#{ENV['FLUENT_OCI_PROFILE'] || 'DEFAULT'}"
          plugin_log_location       "#{ENV['FLUENT_OCI_LOG_LOCATION'] || '/var/log/'}"
          plugin_log_level          "#{ENV['FLUENT_OCI_LOG_LEVEL'] || 'info'}"
          plugin_log_file_size      "#{ENV['FLUENT_OCI_LOG_FILE_SIZE'] || '10MB'}"
          plugin_log_file_count     "#{ENV['FLUENT_OCI_LOG_FILE_COUNT'] || 10}"
          kubernetes_metadata_keys_mapping     {"container_name":"Container","namespace_name":"Namespace","pod_name":"Pod","container_image":"Container Image Name","host":"Node"}
          <buffer>
              @type                           file
              path                            "#{ENV['FLUENT_OCI_BUFFER_PATH'] || '/var/log/oci_la_fluentd_outplugin/logs/buffer/'}"
              flush_thread_count              "#{ENV['FLUENT_OCI_FLUSH_THREAD_COUNT'] || 1}"
              chunk_limit_size                "#{ENV['FLUENT_OCI_CHUNK_LIMIT_SIZE'] || '2m'}"   # 2MB
              total_limit_size                "#{ENV['FLUENT_OCI_TOTAL_LIMIT_SIZE'] || 5368709120}" # 5GB
              flush_interval                  "#{ENV['FLUENT_OCI_FLUSH_INTERVAL'] || 30}" # seconds
              flush_thread_interval           "#{ENV['FLUENT_OCI_FLUSH_THREAD_INTERVAL'] || 0.5}"
              flush_thread_burst_interval     "#{ENV['FLUENT_OCI_FLUSH_THREAD_BURST_INTERVAL'] || 0.05}"
              retry_wait                      "#{ENV['FLUENT_OCI_RETRY_WAIT'] || 2}" # seconds
              retry_max_times                 "#{ENV['FLUENT_OCI_RETRY_MAX_TIMES'] || 17}"
              retry_exponential_backoff_base  "#{ENV['FLUENT_OCI_RETRY_EXPONENTIAL_BACKOFF_BASE'] || 2}"
              retry_forever                   "#{ENV['FLUENT_OCI_RETRY_FOREVER'] || true}"
              disable_chunk_backup true
          </buffer>
      </match>
    </label>
  kubernetes.conf: "# To ignore all the fluentd core generated events\n<label @FLUENT_LOG>\n<match
    fluent.**>\n   @type null\n   @id ignore_fluent_logs\n   </match>\n</label>\n\n#
    Config for Kube Proxy Logs Collection\n# Source config section to collect Kube
    Proxy logs from /var/log/containers/kube-proxy-*.log using Fluentd tail plugin.
    \   \n<source>\n   @type tail\n   @id in_tail_kube_proxy\n   path_key tailed_path\n
    \  path /var/log/containers/kube-proxy-*.log\n   pos_file /var/log/oci_la_fluentd_outplugin/pos/kube-proxy.logs.pos\n
    \  tag oci.oke.kube-proxy.*\n   read_from_head \"#{ENV['FLUENT_OCI_READ_FROM_HEAD']
    || true}\" \n   <parse>\n   @type cri\n   </parse>\n</source>\n\n# Record transformer
    filter to apply Logging Analytics configuration to each record.\n<filter oci.oke.kube-proxy.**>\n
    \  @type record_transformer\n   enable_ruby true\n   <record>\n   oci_la_metadata
    ${{'Kubernetes Cluster Name': \"#{ENV['FLUENT_OCI_KUBERNETES_CLUSTER_NAME'] ||
    'UNDEFINED'}\", 'Kubernetes Cluster ID': \"#{ENV['FLUENT_OCI_KUBERNETES_CLUSTER_ID']
    || 'UNDEFINED'}\"}}\t   \n   oci_la_log_group_id \"#{ENV['FLUENT_OCI_KUBERNETES_LOGGROUP_ID']
    || ENV['FLUENT_OCI_DEFAULT_LOGGROUP_ID']}\" \n   oci_la_log_path \"${record['tailed_path']}\"\n
    \  oci_la_log_source_name \"Kubernetes Proxy Logs\"\n   tag ${tag}\n   </record>\n</filter>\n\n#
    Concat filter to handle partial logs in CRI/ContainerD\n# This filter can not
    be clubbed with concat filter for multiline as both are mutually exclusive.\n<filter
    oci.oke.kube-proxy.**>\n  @type concat\n  key message\n  use_partial_cri_logtag
    true\n  partial_cri_logtag_key logtag\n  partial_cri_stream_key stream\n  # timeout
    scenario should not occur in general for partial logs handling\n  timeout_label
    \"@NORMAL\"\n</filter>\n\n# Concat filter to handle multi-line log records.\n<filter
    oci.oke.kube-proxy.**>\n   @type concat\n   key message\n   stream_identity_key
    stream\n   flush_interval \"#{ENV['FLUENT_CONCAT_FLUSH_INTERVAL'] || 60}\" # seconds\n
    \  timeout_label \"@NORMAL\"\n   multiline_start_regexp /^\\S\\d{2}\\d{2}\\s+[^\\:]+:[^\\:]+:[^\\.]+\\.\\d{0,3}/\n</filter>\n\n#
    Config for Kube Flannel Logs Collection\n# Source config section to collect Kube
    Flannel logs from /var/log/containers/kube-flannel-*.log using Fluentd tail plugin.\n<source>\n
    \  @type tail\n   @id in_tail_kube_flannel\n   path_key tailed_path\n   path /var/log/containers/kube-flannel-*.log\n
    \  pos_file /var/log/oci_la_fluentd_outplugin/pos/kube-flannel.logs.pos\n   tag
    oci.oke.kube-flannel.*\n   read_from_head \"#{ENV['FLUENT_OCI_READ_FROM_HEAD']
    || true}\" \n   <parse>\n   @type cri \n   </parse>\n</source>\n\n# Record transformer
    filter to apply Logging Analytics configuration to each record.\n<filter oci.oke.kube-flannel.**>\n
    \  @type record_transformer\n   enable_ruby true\n   <record>\n   oci_la_metadata
    ${{'Kubernetes Cluster Name': \"#{ENV['FLUENT_OCI_KUBERNETES_CLUSTER_NAME'] ||
    'UNDEFINED'}\", 'Kubernetes Cluster ID': \"#{ENV['FLUENT_OCI_KUBERNETES_CLUSTER_ID']
    || 'UNDEFINED'}\"}}\t   \n   oci_la_log_group_id \"#{ENV['FLUENT_OCI_KUBERNETES_LOGGROUP_ID']
    || ENV['FLUENT_OCI_DEFAULT_LOGGROUP_ID']}\" \n   oci_la_log_path \"${record['tailed_path']}\"
    \n   oci_la_log_source_name \"Kubernetes Flannel Logs\"\n   tag ${tag}\n   </record>\n</filter>\n\n#
    Concat filter to handle partial logs in CRI/ContainerD\n# This filter can not
    be clubbed with concat filter for multiline as both are mutually exclusive.\n<filter
    oci.oke.kube-flannel.**>\n  @type concat\n  key message\n  use_partial_cri_logtag
    true\n  partial_cri_logtag_key logtag\n  partial_cri_stream_key stream\n  # timeout
    scenario should not occur in general for partial logs handling\n  timeout_label
    \"@NORMAL\"\n</filter>\n\n# Concat filter to handle multi-line log records.\n<filter
    oci.oke.kube-flannel.**>\n   @type concat\n   key message\n   stream_identity_key
    stream\n   flush_interval \"#{ENV['FLUENT_CONCAT_FLUSH_INTERVAL'] || 60}\" # seconds\n
    \  timeout_label \"@NORMAL\"\n   multiline_start_regexp /^\\S\\d{2}\\d{2}\\s+[^\\:]+:[^\\:]+:[^\\.]+\\.\\d{0,3}/\n</filter>\n\n#
    Config for Kube DNS Autoscalar Logs Collection\n# Source config section to collect
    Kube DNS Autoscalar logs from /var/log/containers/kube-dns-autoscaler-*.log using
    Fluentd tail plugin.\n<source>\n   @type tail\n   @id in_tail_kube_dns_autoscaler\n
    \  path_key tailed_path\n   path /var/log/containers/kube-dns-autoscaler-*.log\n
    \  pos_file /var/log/oci_la_fluentd_outplugin/pos/kube-dns-autoscaler.logs.pos\n
    \  tag oci.oke.kube-dns-autoscaler.*\n   read_from_head \"#{ENV['FLUENT_OCI_READ_FROM_HEAD']
    || true}\" \n   <parse>\n   @type cri \n   </parse>\n</source>\n\n# Record transformer
    filter to apply Logging Analytics configuration to each record.\n<filter oci.oke.kube-dns-autoscaler.**>\n
    \  @type record_transformer\n   enable_ruby true\n   <record>\n   oci_la_metadata
    ${{'Kubernetes Cluster Name': \"#{ENV['FLUENT_OCI_KUBERNETES_CLUSTER_NAME'] ||
    'UNDEFINED'}\", 'Kubernetes Cluster ID': \"#{ENV['FLUENT_OCI_KUBERNETES_CLUSTER_ID']
    || 'UNDEFINED'}\"}}\t   \n   oci_la_log_group_id \"#{ENV['FLUENT_OCI_KUBERNETES_LOGGROUP_ID']
    || ENV['FLUENT_OCI_DEFAULT_LOGGROUP_ID']}\"\n   oci_la_log_path \"${record['tailed_path']}\"
    \n   oci_la_log_source_name \"Kubernetes DNS Autoscaler Logs\"\n   tag ${tag}\n
    \  </record>\n</filter>\n\n# Concat filter to handle partial logs in CRI/ContainerD\n#
    This filter can not be clubbed with concat filter for multiline as both are mutually
    exclusive.\n<filter oci.oke.kube-dns-autoscaler.**>\n  @type concat\n  key message\n
    \ use_partial_cri_logtag true\n  partial_cri_logtag_key logtag\n  partial_cri_stream_key
    stream\n  # timeout scenario should not occur in general for partial logs handling\n
    \ timeout_label \"@NORMAL\"\n</filter>\n\n# Concat filter to handle multi-line
    log records.\n<filter oci.oke.kube-dns-autoscaler.**>\n   @type concat\n   key
    message\n   stream_identity_key stream\n   flush_interval \"#{ENV['FLUENT_CONCAT_FLUSH_INTERVAL']
    || 60}\" # seconds\n   timeout_label \"@NORMAL\"\n   multiline_start_regexp /^\\S\\d{2}\\d{2}\\s+[^\\:]+:[^\\:]+:[^\\.]+\\.\\d{0,3}/\n</filter>\n\n#
    Config for Coredns Logs Collection\n# Source config section to collect Coredns
    logs from /var/log/containers/coredns-*.log using Fluentd tail plugin.\n<source>\n
    \  @type tail\n   @id in_tail_coredns\n   path_key tailed_path\n   path /var/log/containers/coredns-*.log\n
    \  pos_file /var/log/oci_la_fluentd_outplugin/pos/coredns.logs.pos\n   tag oci.oke.kube.coredns.*\n
    \  read_from_head \"#{ENV['FLUENT_OCI_READ_FROM_HEAD'] || true}\" \n   <parse>\n
    \  @type cri \n   </parse>\n</source>\n\n# Record transformer filter to apply
    Logging Analytics configuration to each record.\n<filter oci.oke.kube.coredns.**>\n
    \  @type record_transformer\n   enable_ruby true\n   <record>\n   oci_la_metadata
    ${{'Kubernetes Cluster Name': \"#{ENV['FLUENT_OCI_KUBERNETES_CLUSTER_NAME'] ||
    'UNDEFINED'}\", 'Kubernetes Cluster ID': \"#{ENV['FLUENT_OCI_KUBERNETES_CLUSTER_ID']
    || 'UNDEFINED'}\"}}\t   \n   oci_la_log_group_id \"#{ENV['FLUENT_OCI_KUBERNETES_LOGGROUP_ID']
    || ENV['FLUENT_OCI_DEFAULT_LOGGROUP_ID']}\"\n   oci_la_log_path \"${record['tailed_path']}\"\n
    \  oci_la_log_source_name \"Kubernetes Core DNS Logs\"\n   tag ${tag}\n   </record>\n</filter>\n\n#
    Concat filter to handle partial logs in CRI/ContainerD\n# This filter can not
    be clubbed with concat filter for multiline as both are mutually exclusive.\n<filter
    oci.oke.kube.coredns.**>\n  @type concat\n  key message\n  use_partial_cri_logtag
    true\n  partial_cri_logtag_key logtag\n  partial_cri_stream_key stream\n  # timeout
    scenario should not occur in general for partial logs handling\n  timeout_label
    \"@NORMAL\"\n</filter>\n\n# Concat filter to handle multi-line log records.\n<filter
    oci.oke.kube.coredns.**>\n   @type concat\n   key message\n   stream_identity_key
    stream\n   flush_interval \"#{ENV['FLUENT_CONCAT_FLUSH_INTERVAL'] || 60}\" # seconds\n
    \  timeout_label \"#@NORMAL\"\n   multiline_start_regexp /^\\[[^\\]]+\\]\\s+/\n</filter>\n\n#
    Config for CSI Node Logs Collection\n# Source config section to collect CSI Node
    logs from /var/log/containers/csi-oci-node-*.log using Fluentd tail plugin.\n<source>\n
    \  @type tail\n   @id in_tail_csinode\n   path_key tailed_path\n   path /var/log/containers/csi-oci-node-*.log\n
    \  pos_file /var/log/oci_la_fluentd_outplugin/pos/csinode.logs.pos\n   tag oci.oke.csinode.*\n
    \  read_from_head \"#{ENV['FLUENT_OCI_READ_FROM_HEAD'] || true}\" \n   <parse>\n
    \  @type cri\n   </parse>\n</source>\n\n# Record transformer filter to apply Logging
    Analytics configuration to each record.\n<filter oci.oke.csinode.**>\n   @type
    record_transformer\n   enable_ruby true\n   <record>\n   oci_la_metadata ${{'Kubernetes
    Cluster Name': \"#{ENV['FLUENT_OCI_KUBERNETES_CLUSTER_NAME'] || 'UNDEFINED'}\",
    'Kubernetes Cluster ID': \"#{ENV['FLUENT_OCI_KUBERNETES_CLUSTER_ID'] || 'UNDEFINED'}\"}}\t
    \  \n   oci_la_log_group_id \"#{ENV['FLUENT_OCI_KUBERNETES_LOGGROUP_ID'] || ENV['FLUENT_OCI_DEFAULT_LOGGROUP_ID']}\"
    \n   oci_la_log_path \"${record['tailed_path']}\"\n   oci_la_log_source_name \"Kubernetes
    CSI Node Driver Logs\"\n   tag ${tag}\n   </record>\n</filter>\n\n# Concat filter
    to handle partial logs in CRI/ContainerD\n# This filter can not be clubbed with
    concat filter for multiline as both are mutually exclusive.\n<filter oci.oke.csinode.**>\n
    \ @type concat\n  key message\n  use_partial_cri_logtag true\n  partial_cri_logtag_key
    logtag\n  partial_cri_stream_key stream\n  # timeout scenario should not occur
    in general for partial logs handling\n  timeout_label \"@NORMAL\"\n</filter>\n\n#
    Config for Proxymux Logs Collection\n# Source config section to collect Proxymux
    logs from /var/log/containers/proxymux-client-*.log using Fluentd tail plugin.\n<source>\n
    \  @type tail\n   @id in_tail_proxymux\n   path_key tailed_path\n   path /var/log/containers/proxymux-client-*.log\n
    \  pos_file /var/log/oci_la_fluentd_outplugin/pos/proxymux.logs.pos\n   tag oci.oke.proxymux-client.*\n
    \  read_from_head \"#{ENV['FLUENT_OCI_READ_FROM_HEAD'] || true}\" \n   <parse>\n
    \  @type cri\n   </parse>\n</source>\n\n# Record transformer filter to apply Logging
    Analytics configuration to each record.\n<filter oci.oke.proxymux-client.**>\n
    \  @type record_transformer\n   enable_ruby true\n   <record>\n   oci_la_metadata
    ${{'Kubernetes Cluster Name': \"#{ENV['FLUENT_OCI_KUBERNETES_CLUSTER_NAME'] ||
    'UNDEFINED'}\", 'Kubernetes Cluster ID': \"#{ENV['FLUENT_OCI_KUBERNETES_CLUSTER_ID']
    || 'UNDEFINED'}\"}}\t   \n   oci_la_log_group_id \"#{ENV['FLUENT_OCI_KUBERNETES_LOGGROUP_ID']
    || ENV['FLUENT_OCI_DEFAULT_LOGGROUP_ID']}\"\n   oci_la_log_path \"${record['tailed_path']}\"
    \n   oci_la_log_source_name \"OKE Proxymux Client Logs\"\n   tag ${tag}\n   </record>\n</filter>\n\n#
    Concat filter to handle partial logs in CRI/ContainerD\n# This filter can not
    be clubbed with concat filter for multiline as both are mutually exclusive.\n<filter
    oci.oke.proxymux-client.**>\n  @type concat\n  key message\n  use_partial_cri_logtag
    true\n  partial_cri_logtag_key logtag\n  partial_cri_stream_key stream\n  # timeout
    scenario should not occur in general for partial logs handling\n  timeout_label
    \"@NORMAL\"\n</filter>\n\n# Config for Cluster Autoscalar Logs Collection\n# Source
    config section to collect Cluster Autoscalar logs from /var/log/containers/cluster-autoscaler-*.log
    using Fluentd tail plugin.\n<source>\n   @type tail\n   @id in_tail_cluster_autoscaler\n
    \  path_key tailed_path\n   path /var/log/containers/cluster-autoscaler-*.log\n
    \  pos_file /var/log/oci_la_fluentd_outplugin/pos/cluster-autoscaler.logs.pos\n
    \  tag oci.oke.cluster-autoscaler.*\n   read_from_head \"#{ENV['FLUENT_OCI_READ_FROM_HEAD']
    || true}\" \n   <parse>\n   @type cri\n   </parse>\n</source>\n\n# Record transformer
    filter to apply Logging Analytics configuration to each record.\n<filter oci.oke.cluster-autoscaler.**>\n
    \  @type record_transformer\n   enable_ruby true\n   <record>\n   oci_la_metadata
    ${{'Kubernetes Cluster Name': \"#{ENV['FLUENT_OCI_KUBERNETES_CLUSTER_NAME'] ||
    'UNDEFINED'}\", 'Kubernetes Cluster ID': \"#{ENV['FLUENT_OCI_KUBERNETES_CLUSTER_ID']
    || 'UNDEFINED'}\"}}\t   \n   oci_la_log_group_id \"#{ENV['FLUENT_OCI_KUBERNETES_LOGGROUP_ID']
    || ENV['FLUENT_OCI_DEFAULT_LOGGROUP_ID']}\" \n   oci_la_log_path \"${record['tailed_path']}\"\n
    \  oci_la_log_source_name \"Kubernetes Autoscaler Logs\"\n   tag ${tag}\n   </record>\n</filter>\n\n#
    Concat filter to handle partial logs in CRI/ContainerD\n# This filter can not
    be clubbed with concat filter for multiline as both are mutually exclusive.\n<filter
    oci.oke.cluster-autoscaler.**>\n  @type concat\n  key message\n  use_partial_cri_logtag
    true\n  partial_cri_logtag_key logtag\n  partial_cri_stream_key stream\n  # timeout
    scenario should not occur in general for partial logs handling\n  timeout_label
    \"@NORMAL\"\n</filter>\n\n# Concat filter to handle multi-line log records.\n<filter
    oci.oke.cluster-autoscaler.**>\n   @type concat\n   key message\n   stream_identity_key
    stream\n   flush_interval \"#{ENV['FLUENT_CONCAT_FLUSH_INTERVAL'] || 60}\" # seconds\n
    \  timeout_label \"@NORMAL\"\n   multiline_start_regexp /^\\S\\d{2}\\d{2}\\s+[^\\:]+:[^\\:]+:[^\\.]+\\.\\d{0,3}/\n</filter>\n\n#
    Config for Cronlog Logs Collection\n# Source config section to collect Cronlog
    logs from /var/log/cron* using Fluentd tail plugin.\n<source>\n   @type tail\n
    \  @id in_tail_cronlog\n   path_key tailed_path\n   path /var/log/cron*\n   pos_file
    /var/log/oci_la_fluentd_outplugin/pos/cronlog.logs.pos\n   tag oci.oke.syslog.cronlog.*\n
    \  read_from_head \"#{ENV['FLUENT_OCI_READ_FROM_HEAD'] || true}\" \n   <parse>\n
    \  @type multiline\n   format_firstline /^(?:(?:\\d+\\s+)?<([^>]*)>(?:\\d+\\s+)?)?\\S+\\s+\\d{1,2}\\s+\\d{1,2}:\\d{1,2}:\\d{1,2}\\s+/\n
    \  format1 /^(?<message>.*)/\n   </parse>\n</source>\n\n# Record transformer filter
    to apply Logging Analytics configuration to each record.\n<filter oci.oke.syslog.cronlog.**>\n
    \  @type record_transformer\n   enable_ruby true\n   <record>\n   oci_la_metadata
    ${{'Node':\"#{ENV['K8S_NODE_NAME'] || 'UNDEFINED'}\", 'Kubernetes Cluster Name':
    \"#{ENV['FLUENT_OCI_KUBERNETES_CLUSTER_NAME'] || 'UNDEFINED'}\", 'Kubernetes Cluster
    ID': \"#{ENV['FLUENT_OCI_KUBERNETES_CLUSTER_ID'] || 'UNDEFINED'}\"}}\n   oci_la_log_group_id
    \"#{ENV['FLUENT_OCI_SYSLOG_LOGGROUP_ID'] || ENV['FLUENT_OCI_DEFAULT_LOGGROUP_ID']}\"
    \n   oci_la_log_path \"${record['tailed_path']}\"\n   oci_la_log_source_name \"Linux
    Cron Logs\"\n   tag ${tag}\n   </record>\n</filter>\n\n# Config for Securelog
    Logs Collection\n# Source config section to collect Securelog logs from /var/log/secure*
    using Fluentd tail plugin.\n<source>\n   @type tail\n   @id in_tail_securelog\n
    \  path_key tailed_path\n   path /var/log/secure*\n   pos_file /var/log/oci_la_fluentd_outplugin/pos/securelog.logs.pos\n
    \  tag oci.oke.syslog.securelog.*\n   read_from_head \"#{ENV['FLUENT_OCI_READ_FROM_HEAD']
    || true}\" \n   <parse>\n   @type multiline\n   format_firstline /^(?:(?:\\d+\\s+)?<([^>]*)>(?:\\d+\\s+)?)?\\S+\\s+\\d{1,2}\\s+\\d{1,2}:\\d{1,2}:\\d{1,2}\\s+/\n
    \  format1 /^(?<message>.*)/\n   </parse>\n</source>\n\n# Record transformer filter
    to apply Logging Analytics configuration to each record.\n<filter oci.oke.syslog.securelog.**>\n
    \  @type record_transformer\n   enable_ruby true\n   <record>\n   oci_la_metadata
    ${{'Node':\"#{ENV['K8S_NODE_NAME'] || 'UNDEFINED'}\", 'Kubernetes Cluster Name':
    \"#{ENV['FLUENT_OCI_KUBERNETES_CLUSTER_NAME'] || 'UNDEFINED'}\", 'Kubernetes Cluster
    ID': \"#{ENV['FLUENT_OCI_KUBERNETES_CLUSTER_ID'] || 'UNDEFINED'}\"}}\n   oci_la_log_group_id
    \"#{ENV['FLUENT_OCI_SYSLOG_LOGGROUP_ID'] || ENV['FLUENT_OCI_DEFAULT_LOGGROUP_ID']}\"
    \n   oci_la_log_path \"${record['tailed_path']}\" \n   oci_la_log_source_name
    \"Linux Secure Logs\"\n   tag ${tag}\n   </record>\n</filter>\n\n# Config for
    Syslog Logs Collection\n# Source config section to collect Syslog logs from /var/log/messages*
    using Fluentd tail plugin.\n<source>\n   @type tail\n   @id in_tail_syslog\n   path_key
    tailed_path\n   path /var/log/messages*\n   pos_file /var/log/oci_la_fluentd_outplugin/pos/syslog.logs.pos\n
    \  tag oci.oke.syslog.messages.**\n   read_from_head \"#{ENV['FLUENT_OCI_READ_FROM_HEAD']
    || true}\" \n   <parse>\n   @type multiline\n   format_firstline /^(?:(?:\\d+\\s+)?<([^>]*)>(?:\\d+\\s+)?)?\\S+\\s+\\d{1,2}\\s+\\d{1,2}:\\d{1,2}:\\d{1,2}\\s+/\n
    \  format1 /^(?<message>.*)/\n   </parse>\n</source>\n\n# Match block to filter
    kubelet logs from syslogs\n<match oci.oke.syslog.messages.**>\n   @type rewrite_tag_filter\n
    \  <rule>\n   key message\n   pattern /kubelet:/\n   tag oci.oke.syslog.kubelet.*\n
    \  </rule>\n   <rule>\n   key message\n   pattern  /^((?!kubelet:).)*$/\n   tag
    oci.oke.syslog.syslog.*\n   </rule>\n</match>\n\n# Record transformer filter to
    apply Logging Analytics configuration to each record.\n<filter oci.oke.syslog.kubelet.**>\n
    \  @type record_transformer\n   enable_ruby true\n   <record>\n   oci_la_metadata
    ${{'Node':\"#{ENV['K8S_NODE_NAME'] || 'UNDEFINED'}\", 'Kubernetes Cluster Name':
    \"#{ENV['FLUENT_OCI_KUBERNETES_CLUSTER_NAME'] || 'UNDEFINED'}\", 'Kubernetes Cluster
    ID': \"#{ENV['FLUENT_OCI_KUBERNETES_CLUSTER_ID'] || 'UNDEFINED'}\"}}\n   oci_la_log_group_id
    \"#{ENV['FLUENT_OCI_KUBERNETES_LOGGROUP_ID'] || ENV['FLUENT_OCI_DEFAULT_LOGGROUP_ID']}\"
    \n   oci_la_log_path \"${record['tailed_path']}\"\n   oci_la_log_source_name \"Kubernetes
    Kubelet Logs\"\n   tag ${tag}\n   </record>\n</filter>\n\n# Record transformer
    filter to apply Logging Analytics configuration to each record.\n<filter oci.oke.syslog.syslog.**>\n
    \  @type record_transformer\n   enable_ruby true\n   <record>\n   oci_la_metadata
    ${{'Node':\"#{ENV['K8S_NODE_NAME'] || 'UNDEFINED'}\", 'Kubernetes Cluster Name':
    \"#{ENV['FLUENT_OCI_KUBERNETES_CLUSTER_NAME'] || 'UNDEFINED'}\", 'Kubernetes Cluster
    ID': \"#{ENV['FLUENT_OCI_KUBERNETES_CLUSTER_ID'] || 'UNDEFINED'}\"}}\n   oci_la_log_group_id
    \"#{ENV['FLUENT_OCI_SYSLOG_LOGGROUP_ID'] || ENV['FLUENT_OCI_DEFAULT_LOGGROUP_ID']}\"
    \n   oci_la_log_path \"${record['tailed_path']}\" \n   oci_la_log_source_name
    \"Linux Syslog Logs\"\n   tag ${tag}\n   </record>\n</filter>\n\n# Config for
    Mail Delivery Logs Collection\n# Source config section to collect Mail Delivery
    Logs from /var/log/maillog* using Fluentd tail plugin.\n<source>\n   @type tail\n
    \  @id in_tail_maillog\n   path_key tailed_path\n   path /var/log/maillog*\n   pos_file
    /var/log/oci_la_fluentd_outplugin/pos/maillog.logs.pos\n   tag oci.oke.syslog.maillog.*\n
    \  read_from_head \"#{ENV['FLUENT_OCI_READ_FROM_HEAD'] || true}\"\n   <parse>\n
    \  @type multiline\n   format_firstline /^(?:(?:\\d+\\s+)?<([^>]*)>(?:\\d+\\s+)?)?\\S+\\s+\\d{1,2}\\s+\\d{1,2}:\\d{1,2}:\\d{1,2}\\s+/\n
    \  format1 /^(?<message>.*)/\n   </parse>\n</source>\n\n# Record transformer filter
    to apply Logging Analytics configuration to each record.\n<filter oci.oke.syslog.maillog.**>\n
    \  @type record_transformer\n   enable_ruby true\n   <record>\n   oci_la_metadata
    ${{'Node':\"#{ENV['K8S_NODE_NAME'] || 'UNDEFINED'}\", 'Kubernetes Cluster Name':
    \"#{ENV['FLUENT_OCI_KUBERNETES_CLUSTER_NAME'] || 'UNDEFINED'}\", 'Kubernetes Cluster
    ID': \"#{ENV['FLUENT_OCI_KUBERNETES_CLUSTER_ID'] || 'UNDEFINED'}\"}}\n   oci_la_log_group_id
    \"#{ENV['FLUENT_OCI_SYSLOG_LOGGROUP_ID'] || ENV['FLUENT_OCI_DEFAULT_LOGGROUP_ID']}\"\n
    \  oci_la_log_path \"${record['tailed_path']}\"\n   oci_la_log_source_name \"Linux
    Mail Delivery Logs\"\n   tag ${tag}\n   </record>\n</filter>\n\n# Config for Linux
    Audit Logs Collection\n# Source config section to collect Linux Audit Logs from
    /var/log/audit/audit* using Fluentd tail plugin.\n<source>\n   @type tail\n   @id
    in_tail_linuxauditlog\n   path_key tailed_path\n   path /var/log/audit/audit*\n
    \  pos_file /var/log/oci_la_fluentd_outplugin/pos/linuxauditlog.logs.pos\n   tag
    oci.oke.syslog.linuxauditlog.*\n   read_from_head \"#{ENV['FLUENT_OCI_READ_FROM_HEAD']
    || true}\"\n   <parse>\n   @type none\n   </parse>\n</source>\n\n# Record transformer
    filter to apply Logging Analytics configuration to each record.\n<filter oci.oke.syslog.linuxauditlog.**>\n
    \  @type record_transformer\n   enable_ruby true\n   <record>\n   oci_la_metadata
    ${{'Node':\"#{ENV['K8S_NODE_NAME'] || 'UNDEFINED'}\", 'Kubernetes Cluster Name':
    \"#{ENV['FLUENT_OCI_KUBERNETES_CLUSTER_NAME'] || 'UNDEFINED'}\", 'Kubernetes Cluster
    ID': \"#{ENV['FLUENT_OCI_KUBERNETES_CLUSTER_ID'] || 'UNDEFINED'}\"}}\n   oci_la_log_group_id
    \"#{ENV['FLUENT_OCI_SYSLOG_LOGGROUP_ID'] || ENV['FLUENT_OCI_DEFAULT_LOGGROUP_ID']}\"\n
    \  oci_la_log_path \"${record['tailed_path']}\"\n   oci_la_log_source_name \"Linux
    Audit Logs\"\n   tag ${tag}\n   </record>\n</filter>\n\n# Config for Ksplice Logs
    Collection\n# Source config section to collect Ksplice Logs from /var/log/uptrack*
    using Fluentd tail plugin.\n<source>\n   @type tail\n   @id in_tail_uptracklog\n
    \  path_key tailed_path\n   path /var/log/uptrack*\n   pos_file /var/log/oci_la_fluentd_outplugin/pos/uptracklog.logs.pos\n
    \  tag oci.oke.syslog.uptracklog.*\n   read_from_head \"#{ENV['FLUENT_OCI_READ_FROM_HEAD']
    || true}\"\n   <parse>\n   @type multiline\n   format_firstline /^\\d{4}-\\d{2}-\\d{2}\\s+\\d{2}:\\d{2}:\\d{2}/\n
    \  format1 /^(?<message>.*)/\n   </parse>\n</source>\n\n# Record transformer filter
    to apply Logging Analytics configuration to each record.\n<filter oci.oke.syslog.uptracklog.**>\n
    \  @type record_transformer\n   enable_ruby true\n   <record>\n   oci_la_metadata
    ${{'Node':\"#{ENV['K8S_NODE_NAME'] || 'UNDEFINED'}\", 'Kubernetes Cluster Name':
    \"#{ENV['FLUENT_OCI_KUBERNETES_CLUSTER_NAME'] || 'UNDEFINED'}\", 'Kubernetes Cluster
    ID': \"#{ENV['FLUENT_OCI_KUBERNETES_CLUSTER_ID'] || 'UNDEFINED'}\"}}\n   oci_la_log_group_id
    \"#{ENV['FLUENT_OCI_SYSLOG_LOGGROUP_ID'] || ENV['FLUENT_OCI_DEFAULT_LOGGROUP_ID']}\"\n
    \  oci_la_log_path \"${record['tailed_path']}\"\n   oci_la_log_source_name \"Ksplice
    Logs\"\n   tag ${tag}\n   </record>\n</filter>\n\n# Config for YUM Logs Collection\n#
    Source config section to collect YUM Logs from /var/log/yum.log* using Fluentd
    tail plugin.\n<source>\n   @type tail\n   @id in_tail_yumlog\n   path_key tailed_path\n
    \  path /var/log/yum.log*\n   pos_file /var/log/oci_la_fluentd_outplugin/pos/yum.logs.pos\n
    \  tag oci.oke.syslog.yumlog.*\n   read_from_head \"#{ENV['FLUENT_OCI_READ_FROM_HEAD']
    || true}\"\n   <parse>\n   @type none\n   </parse>\n</source>\n\n# Record transformer
    filter to apply Logging Analytics configuration to each record.\n<filter oci.oke.syslog.yumlog.**>\n
    \  @type record_transformer\n   enable_ruby true\n   <record>\n   oci_la_metadata
    ${{'Node':\"#{ENV['K8S_NODE_NAME'] || 'UNDEFINED'}\", 'Kubernetes Cluster Name':
    \"#{ENV['FLUENT_OCI_KUBERNETES_CLUSTER_NAME'] || 'UNDEFINED'}\", 'Kubernetes Cluster
    ID': \"#{ENV['FLUENT_OCI_KUBERNETES_CLUSTER_ID'] || 'UNDEFINED'}\"}}\n   oci_la_log_group_id
    \"#{ENV['FLUENT_OCI_SYSLOG_LOGGROUP_ID'] || ENV['FLUENT_OCI_DEFAULT_LOGGROUP_ID']}\"\n
    \  oci_la_log_path \"${record['tailed_path']}\"\n   oci_la_log_source_name \"Linux
    YUM Logs\"\n   tag ${tag}\n   </record>\n</filter>\n\n# Config for Container Logs
    Collection (except for the ones which are specifically configured above)\n# Source
    config section to collect Container logs from /var/log/containers/*.log using
    Fluentd tail plugin.\n<source>\n   @type tail\n   @id in_tail_containerlogs\n
    \  path_key tailed_path\n   path /var/log/containers/*.log\n   pos_file /var/log/oci_la_fluentd_outplugin/pos/containerlogs.logs.pos\n
    \  tag oci.oke.containerlogs.*\n   read_from_head \"#{ENV['FLUENT_OCI_READ_FROM_HEAD']
    || true}\"\n   # Modify the exclude path once a specific container log config
    is explictly defined to avoid duplicate collection.\n   exclude_path [\"/var/log/containers/kube-proxy-*.log\",
    \"/var/log/containers/kube-flannel-*.log\", \"/var/log/containers/kube-dns-autoscaler-*.log\",
    \"/var/log/containers/coredns-*.log\", \"/var/log/containers/csi-oci-node-*.log\",
    \"/var/log/containers/proxymux-client-*.log\", \"/var/log/containers/cluster-autoscaler-*.log\"]\n
    \  <parse>\n   @type cri\n   </parse>\n</source>\n\n# Filter to add kubernetes
    metadata\n<filter oci.oke.containerlogs.**>\n  @type kubernetes_metadata\n  @id
    filter_kube_metadata_containerlogs\n  kubernetes_url \"#{ENV['FLUENT_FILTER_KUBERNETES_URL']
    || 'https://' + ENV.fetch('KUBERNETES_SERVICE_HOST') + ':' + ENV.fetch('KUBERNETES_SERVICE_PORT')
    + '/api'}\"\n  verify_ssl \"#{ENV['KUBERNETES_VERIFY_SSL'] || true}\"\n  ca_file
    \"#{ENV['KUBERNETES_CA_FILE']}\"\n  skip_labels \"#{ENV['FLUENT_KUBERNETES_METADATA_SKIP_LABELS']
    || 'false'}\"\n  skip_container_metadata \"#{ENV['FLUENT_KUBERNETES_METADATA_SKIP_CONTAINER_METADATA']
    || 'false'}\"\n  skip_master_url \"#{ENV['FLUENT_KUBERNETES_METADATA_SKIP_MASTER_URL']
    || 'false'}\"\n  skip_namespace_metadata \"#{ENV['FLUENT_KUBERNETES_METADATA_SKIP_NAMESPACE_METADATA']
    || 'false'}\"\n  watch \"#{ENV['FLUENT_KUBERNETES_WATCH'] || 'true'}\"\n  de_dot
    false\n  annotation_match [ \".*\" ]\n</filter>\n\n# Record transformer filter
    to apply Logging Analytics configuration to each record.\n<filter oci.oke.containerlogs.**>\n
    \  @type record_transformer\n   enable_ruby true\n   <record>\n   oci_la_metadata
    ${{'Kubernetes Cluster Name': \"#{ENV['FLUENT_OCI_KUBERNETES_CLUSTER_NAME'] ||
    'UNDEFINED'}\", 'Kubernetes Cluster ID': \"#{ENV['FLUENT_OCI_KUBERNETES_CLUSTER_ID']
    || 'UNDEFINED'}\"}}\n   oci_la_log_group_id ${record.dig(\"kubernetes\", \"annotations\",
    \"oracle.com/oci_la_log_group_id\") ? record.dig(\"kubernetes\", \"annotations\",
    \"oracle.com/oci_la_log_group_id\") : \"#{ENV['FLUENT_OCI_KUBERNETES_LOGGROUP_ID']
    || ENV['FLUENT_OCI_DEFAULT_LOGGROUP_ID']}\"}\n   oci_la_log_path \"${record['tailed_path']}\"\n
    \  oci_la_log_source_name ${record.dig(\"kubernetes\", \"annotations\", \"oracle.com/oci_la_log_source_name\")
    ? record.dig(\"kubernetes\", \"annotations\", \"oracle.com/oci_la_log_source_name\")
    : \"Kubernetes Container Generic Logs\"}\n   oci_la_entity_id ${record.dig(\"kubernetes\",
    \"annotations\", \"oracle.com/oci_la_entity_id\") ? record.dig(\"kubernetes\",
    \"annotations\", \"oracle.com/oci_la_entity_id\") : \"\"}\n   oci_la_log_set ${record.dig(\"kubernetes\",
    \"annotations\", \"oracle.com/oci_la_log_set\") ? record.dig(\"kubernetes\", \"annotations\",
    \"oracle.com/oci_la_log_set\") : \"\"}\n   tag ${tag}\n   </record>\n</filter>\n\n#
    Concat filter to handle partial logs in CRI/ContainerD\n# This filter can not
    be clubbed with concat filter for multiline as both are mutually exclusive.\n<filter
    oci.oke.containerlogs.**>\n  @type concat\n  key message\n  use_partial_cri_logtag
    true\n  partial_cri_logtag_key logtag\n  partial_cri_stream_key stream\n  # timeout
    scenario should not occur in general for partial logs handling\n  timeout_label
    \"@NORMAL\"\n</filter>\n"
kind: ConfigMap
metadata:
  name: oci-la-fluentd-logs-configmap
  namespace: fluent-bit
---
apiVersion: v1
data:
  .dockerconfigjson: eyJhdXRocyI6eyJhcnRpZmFjdG9yeS50cmluZXQtZGV2b3BzLmNvbTo0NDMiOnsidXNlcm5hbWUiOiJkZXBsb3loZWxwZXIiLCJwYXNzd29yZCI6ImthMlcjdzJKWnpcdTAwMjZOd1x1MDAyNjRFYV4iLCJhdXRoIjoiWkdWd2JHOTVhR1ZzY0dWeU9tdGhNbGNqZHpKS1dub21UbmNtTkVWaFhnPT0ifX19
kind: Secret
metadata:
  name: regcred
  namespace: fluent-bit
type: kubernetes.io/dockerconfigjson
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: oci-la-fluentd-logs
    version: v1
  name: oci-la-fluentd-daemonset
  namespace: fluent-bit
spec:
  selector:
    matchLabels:
      app: oci-la-fluentd-logs
      version: v1
  template:
    metadata:
      labels:
        app: oci-la-fluentd-logs
        version: v1
    spec:
      containers:
      - env:
        - name: FLUENT_OCI_DEFAULT_LOGGROUP_ID
          value: ocid1.loganalyticsloggroup.oc1.phx.amaaaaaazb2mcpqak5xxb6z7xpcdhkettypjk24gqq5kqltck5hq6hyhmtfq
        - name: FLUENT_OCI_KUBERNETES_CLUSTER_ID
          value: ocid1.cluster.oc1.phx.aaaaaaaamjfmea53yhuywldb3x5sm3nlsekxzn6arxsbj52bgc2riewjj4fa
        - name: FLUENT_OCI_KUBERNETES_CLUSTER_NAME
          value: k8s-peo-qe-01
        - name: FLUENT_OCI_NAMESPACE
          value: axggt57ed1yh
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: FLUENTD_CONF
          value: /var/opt/conf/fluent.conf
        - name: OCI_READ_FROM_HEAD
          value: "true"
        image: artifactory.trinet-devops.com:443/docker/cloudops/fluentd_oci_la:v1.0.0
        imagePullPolicy: Always
        name: oci-la-fluentd-logs
        resources:
          limits:
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 250Mi
        volumeMounts:
        - mountPath: /var/log
          name: varlog
        - mountPath: /var/log/pods
          name: dockercontainerlogdirectory
          readOnly: true
        - mountPath: /u01/data/docker/containers
          name: dockercontainerdatadirectory
          readOnly: true
        - mountPath: /var/opt/conf
          name: fluentdconfigdir
          readOnly: true
      imagePullSecrets:
      - name: regcred
      serviceAccountName: oci-la-fluentd-serviceaccount
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      volumes:
      - hostPath:
          path: /var/log
        name: varlog
      - hostPath:
          path: /var/log/pods
        name: dockercontainerlogdirectory
      - hostPath:
          path: /u01/data/docker/containers
        name: dockercontainerdatadirectory
      - configMap:
          name: oci-la-fluentd-logs-configmap
        name: fluentdconfigdir
